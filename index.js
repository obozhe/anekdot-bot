const { Telegraf, Markup } = require('telegraf');
const express = require('express');
const app = express();

const ContentTypes = require('./content-types');
const splitArrayToChunks = require('./heplers/array-to-chunk');
const getContent = require('./heplers/request-content-api');
// const { createNewChat } = require('./db.controller');

const port = process.env.PORT || 3000;
app.listen(port, '0.0.0.0', function () {
  const bot = new Telegraf(process.env.BOT_API);
  const sections = splitArrayToChunks(Object.keys(ContentTypes));

  bot.start((ctx) => {
    ctx.reply(
      '–ñ–º–∏ —á–µ —Ç—ã —Ç–∞–º —Ö–æ—á–µ—à—å –∏ –∑–∞–ø–æ–º–Ω–∏ —á–µ –¥–µ–ª–∞—Ç—å –ø–æ—Ç–æ–º—É —á—Ç–æ —ç—Ç–∞ –∏–Ω—Ñ–∞ –±–æ–ª—å—à–µ –Ω–µ –ø–æ—è–≤–∏—Ç—Å—è',
      Markup.keyboard(sections).resize()
    );

    // createNewChat(ctx.message.chat.id);
  });

  bot.help((ctx) => ctx.reply('–ë–æ–∂–µ —è –¥—É–º–∞—é —Ç—ã —Å–∞–º —Ä–∞–∑–±–µ—Ä–µ—à—å—Å—è —á–µ —Ç—É—Ç –¥–µ–ª–∞—Ç—å))))'));

  Object.keys(ContentTypes).forEach((contentType) => {
    bot.hears(contentType, (ctx) => {
      getContent(ContentTypes[contentType])
        .then((content) => {
          const reply = content || '–ü–æ—Ö–æ–∂–µ –ø—Ä–∏—à–µ–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å... –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑';
          ctx.reply(reply);
        })
        .catch(console.error);
    });
  });

  bot.on('text', (ctx) => ctx.reply('–ù–µ –ø–æ–Ω—è–ª ü§î\n–ù–∞–¥–æ –∫–Ω–æ–ø–∫–∏ —Å–Ω–∏–∑—É –∂–∞—Ç—å –∏–Ω–∞—á–µ –Ω–∏–∫–∞–∫'));

  bot.launch();
});
